##########################################
AWS ECS上に構築するSpringアプリケーション
##########################################

| このメモ、果たしてどこまで続くのか？


AWS ECS上に構築するSpringアプリケーション(1)
==================================================================

以下のサイトに従ってやります。
* `AWS ECS上に構築するSpringアプリケーション(1) <https://news.mynavi.jp/techplus/article/techp4354/>`_

Elastic IPアドレス割り当てます。特にハマりはなし。

   .. image:: ./images/0001.png

続いて、VPCを作成します。
2つのアベイラビリティゾーンで、それぞれprivateとpublicのサブネットを割り当て。
ルートテーブルもそれぞれに作ります。
ちなみに、VPC名に「pub」とつけてしまったのはミス。。pubもpriも同じだっつの。
こういうところからバグやらエラーやらが生まれるんでしょうね。

   .. image:: ./images/0002.png
   .. image:: ./images/0003.png

？疑問？
ルートテーブルってやつの存在が良くわからない。
なんでpublicだと1つで良くてprivateだとそれぞれ必要なのか？
？疑問終わり？

成功と出てきました。

   .. image:: ./images/0004.png

左のメニューから「ルートテーブル」を選択。
検索画面に先ほど作成したVPCの情報を入れると、先ほど作成した4つ分のサブネットが表示されました。

   .. image:: ./images/0005.png

メイン「いいえ」となっているルートテーブルへのサブネットの関連付けは、
どれも「明示的な関連付けがないサブネットがありません。すべてのサブネットはルートテーブルに関連付けられています。」
とあったので、問題なさそう、、と判断して一旦次へ行ってみます。

   .. image:: ./images/0006.png

？疑問？
↑ルートテーブルの概念が良くわかってないからか、何が正しくて何が正しくないのかよくわからない。
？疑問終わり？

～～以下、ボツ要素～～
2024/1/10に作り直してるので以下はボツのやつです。
理由はシドニーリージョンに作ってしまったため。
東京リージョンに作り直してます。

1. VPC(Virtual Private Cloud)環境の構築
さっそくつまずき。
バージョン差分なのかサイトの情報と異なる項目が多かったですが、
以下の通りほぼデフォルトで設定してみました。

   .. image:: ./images_old/0001.png
   .. image:: ./images_old/0002.png
   .. image:: ./images_old/0003.png

成功と出たので問題ないような気がします。

   .. image:: ./images_old/0004.png

続いて「サブネットの作成」画面。
左のメニューから「ルートテーブル」を選択。
検索画面に先ほど作成したVPCの情報を入れるとなにやらいっぱい出てきました。

   .. image:: ./images_old/0005.png
   
おそらく「プライベート」のルートテーブルが2つ、「パブリック」のルートテーブルが2つ、
ということなんだと思います。

続いて、メインが「いいえ」となっているルートテーブルへのサブネットの関連付けですが、
どれも「明示的な関連付けがないサブネットがありません。すべてのサブネットはルートテーブルに関連付けられています。」
とあったので、問題なさそう、、と判断して一旦次へ行ってみます。

   .. image:: ./images_old/0006.png
   .. image:: ./images_old/0007.png
   .. image:: ./images_old/0008.png
   
～～ボツ要素終わり～～


AWS ECS上に構築するSpringアプリケーション(2)
==================================================================

以下のサイトに従ってやります。
* `AWS ECS上に構築するSpringアプリケーション(2) <https://news.mynavi.jp/techplus/article/techp4359/>`_

早速、ALBを準備してみます。
まずはpublic用のロードバランサから。
サブネット対象は、(1)で作成したサブネットのうちpublicにあたるやつを指定しました。

   .. image:: ./images/0007.png
   .. image:: ./images/0008.png

続いて、セキュリティグループを新規作成します。

   .. image:: ./images/0009.png

正直あんまりよくわかりませんでしたが、まあほぼほぼサイトの通りかと。

   .. image:: ./images/0010.png

正常作成となったので、まあ一旦これでやります。
後々設定ミスってたら変えられるでしょうきっと（）。

   .. image:: ./images/0011.png

続いて、リスナーとルーティングの設定。
public用なんですが、今回はhttp80で受付。
本当は外部からアクセスなのでおそらくhttpsで指定したほうが良いんでしょうね。

   .. image:: ./images/0012.png

！注意！
後から気づいたんですが、アウトバウンドルール（内→外）じゃなくて、
インバウンドルール（外→内）を設定すべきじゃろ？
と思ったのでインバウンドルールを追加してアウトバウンドルールは消しました。
インバウンドルールは以下の通り。

   .. image:: ./images/0016.png

0.0.0.0指定だとなんでも受け付けちゃうから危ないよ！と警告出てますが一旦ガバガバセキュリティで行こうと思います。
！注意終わり！

ここでは更にターゲットグループを新たに作成する必要ありそうです。

   .. image:: ./images/0013.png

オリジナルな部分はヘルスチェック用のパスですね。
今後のアプリケーション作成の際に意識すべき点なような気がします。
こちらのパスにindex.htmlを置かなきゃいけないことを覚えておきます。

   .. image:: ./images/0014.png

作成したターゲットグループをリスナーに紐づけて完成です。多分。

   .. image:: ./images/0015.png

続いてprivate側のALBも作ってみます。
内部向けなのでIP気を付けたりhttp接続にしたりprivate用のサブネットなどに留意すれば同じようにできるんではないかと。
特筆すべき差分があったらメモします。

メモは、
・セキュリティグループはprivate用のものを作成
・ターゲットグループはpublicと同じで良い？
くらいですね。

後々ミスってたら戻ってくるかも。
一旦public、private共に作成完了です。
